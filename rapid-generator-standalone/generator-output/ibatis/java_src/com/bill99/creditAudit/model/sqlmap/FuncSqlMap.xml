<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.Func" class="com.bill99.creditAudit.model.Func">
        <result property="name" column="name"/>
        <result property="ret" column="ret"/>
        <result property="dl" column="dl"/>
        <result property="type" column="type"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Func.columns">
	    <![CDATA[
        name ,ret ,dl ,type 
	    ]]>
	</sql>
	
    <insert id="Func.insert" >
    <![CDATA[
        INSERT INTO func (
        	name ,
        	ret ,
        	dl ,
        	type 
        ) VALUES (
        	#name# ,
        	#ret# ,
        	#dl# ,
        	#type# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="name" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="Func.update" >
    <![CDATA[
        UPDATE func SET
	        ret = #ret# ,
	        dl = #dl# ,
	        type = #type# 
        WHERE 
	        name = #name# 
    ]]>
    </update>

    <delete id="Func.delete">
    <![CDATA[
        DELETE FROM func WHERE
        name = #name# 
    ]]>
    </delete>
    
    <select id="Func.getById" resultMap="RM.Func">
	    SELECT <include refid="Func.columns"/>
	    <![CDATA[
	        FROM func 
	        WHERE 
		        name = #name# 
	    ]]>
    </select>

	<sql id="Func.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="name">
		             name = #name#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="ret">
		             ret = #ret#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="dl">
		             dl = #dl#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="type">
		             type = #type#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="Func.findPage.count" resultClass="long">
        SELECT count(*) FROM func <include refid="Func.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Func.findPage" resultMap="RM.Func">
    	SELECT <include refid="Func.columns"/> FROM func 
		<include refid="Func.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>

	
</sqlMap>

