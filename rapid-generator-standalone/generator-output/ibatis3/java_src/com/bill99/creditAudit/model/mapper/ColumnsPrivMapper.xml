<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="ColumnsPriv">

	<resultMap id="RM.ColumnsPriv" type="com.bill99.creditAudit.model.ColumnsPriv">
        <result property="host" column="Host"/>
        <result property="db" column="Db"/>
        <result property="user" column="User"/>
        <result property="tableName" column="Table_name"/>
        <result property="columnName" column="Column_name"/>
        <result property="timestamp" column="Timestamp"/>
        <result property="columnPriv" column="Column_priv"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ColumnsPriv.columns">
	    <![CDATA[
		Host,Db,User,Table_name,Column_name,Timestamp,Column_priv
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="ColumnsPriv.insert" useGeneratedKeys="true" keyProperty="host">
    <![CDATA[
        INSERT INTO columns_priv (
        	Host ,
        	Db ,
        	User ,
        	Table_name ,
        	Column_name ,
        	Timestamp ,
        	Column_priv 
        ) VALUES (
        	#{host} ,
        	#{db} ,
        	#{user} ,
        	#{tableName} ,
        	#{columnName} ,
        	#{timestamp} ,
        	#{columnPriv} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="ColumnsPriv.update" >
    <![CDATA[
        UPDATE columns_priv SET
	        Timestamp = #{timestamp} ,
	        Column_priv = #{columnPriv} 
        WHERE 
	        Host = #{host} ,
	        Db = #{db} ,
	        User = #{user} ,
	        Table_name = #{tableName} ,
	        Column_name = #{columnName} 
    ]]>
	</update>

    <delete id="ColumnsPriv.delete">
    <![CDATA[
        DELETE FROM columns_priv WHERE
        Host = #{id} ,
        Db = #{id} ,
        User = #{id} ,
        Table_name = #{id} ,
        Column_name = #{id} 
    ]]>
    </delete>
    
    <select id="ColumnsPriv.getById" resultMap="RM.ColumnsPriv">
		SELECT <include refid="ColumnsPriv.columns" />
	    <![CDATA[
		    FROM columns_priv 
	        WHERE 
		        Host = #{id} ,
		        Db = #{id} ,
		        User = #{id} ,
		        Table_name = #{id} ,
		        Column_name = #{id} 
	    ]]>
	</select>
	
	<sql id="ColumnsPriv.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(host)">
				AND Host = #{host}
			</if>
	       <if test="@Ognl@isNotEmpty(db)">
				AND Db = #{db}
			</if>
	       <if test="@Ognl@isNotEmpty(user)">
				AND User = #{user}
			</if>
	       <if test="@Ognl@isNotEmpty(tableName)">
				AND Table_name = #{tableName}
			</if>
	       <if test="@Ognl@isNotEmpty(columnName)">
				AND Column_name = #{columnName}
			</if>
	       <if test="@Ognl@isNotEmpty(timestampBegin)">
				AND Timestamp >= #{timestampBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(timestampEnd)">
				AND Timestamp &lt;= #{timestampEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(columnPriv)">
				AND Column_priv = #{columnPriv}
			</if>
		</where>
	</sql>
		
    <select id="ColumnsPriv.findPage.count" resultType="long">
        SELECT count(*) FROM columns_priv 
		<include refid="ColumnsPriv.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="ColumnsPriv.findPage" resultMap="RM.ColumnsPriv">
    	SELECT <include refid="ColumnsPriv.columns" />
	    FROM columns_priv 
		<include refid="ColumnsPriv.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

